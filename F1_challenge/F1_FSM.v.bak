module fsm(sysclk,tick, trigger, time_out, en_lfsr, start_delay, ledr); 
input sysclk
input tick; 
input trigger; 
input time_out; 
output en_lfsr, start_delay; 
output [9:0] ledr; 


reg [1:0] state;  
parameter IDLE = 2'b000;
parameter LED0 = 2'b001; 
parameter LED1 = 2'b010; 
parameter LED2 = 2'b011; 
parameter LED3 = 2'b100; 
parameter LED4 = 2'b101; 
initial state = IDLE; 

always @(posedge sysclk)
case(state)
	IDLE: 
	if(trigger == 1)
	state = LED0;
	start_delay = 1; 
	
	LED0:
	if(time_out = 1)
	state = LED1;
	start_delay = 1; 
	else start_delay = 0; 
	
	LED1: 
	if(time_out = 1)
	state = LED2;
	start_delay = 1; 
	else start_delay = 0; 
	 
	LED2: 
	if(time_out = 1)
	state = LED3;
	start_delay = 1; 
	else start_delay = 0; 
	LED3: 
	if(time_out = 1)
	state = LED4;
	start_delay = 1; 
	en_lfsr = 1; 
	else start_delay = 0; 
	LED4: 
	if(time_out = 1)
	en_lfsr = 0; 
	state = IDLE;
	en_lfsr = 1; 
	else start_delay = 0;
	default:;
endcase 


always @(*)
case(state)
	IDLE: 
		ledr = 0; 
	LED0: 
		ledr[5] = 1'b1; 
 
	LED1: 
		ledr[5] = 1'b1; 
		ledr[6] = 1'b1; 
	
	LED2: 
		ledr[5] = 1'b1; 
		ledr[6] = 1'b1; 
		ledr[7] = 1'b1; 
	LED3: 
		ledr[5] = 1'b1; 
		ledr[6] = 1'b1; 
		ledr[7] = 1'b1;
		ledr[8] = 1'b1; 
		
	LED4:
		ledr[5] = 1'b1; 
		ledr[6] = 1'b1; 
		ledr[7] = 1'b1;
		ledr[8] = 1'b1; 
		ledr[9] = 1'b1;
	default:; 
	endcase;
endmodule; 	
	


		

	
	
		
	
